<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all();

if global.Title == 0
{
    scale = .75;
    x = 225;
    y = 150;
    alphaValue = .005;
    if (!audio_is_playing(mus_Title)) audio_play_sound(mus_Title,0,true);
}

if global.Title == 1
{
    x = (view_xview + view_wview * 0.5);
    scale = 1;
    background_index[0] = bg_Space;
    background_vtiled[0] = true;
    background_htiled[0] = true;
    background_vspeed[0] = 0;
    background_hspeed[0] = .25;
    background_index[1] = bg_Stars;
    background_vtiled[1] = true;
    background_htiled[1] = true;
    background_vspeed[1] = 0;
    background_hspeed[1] = .375;
    background_index[2] = bg_Popstar;
    background_x[2] = 141;
    background_index[3] = bg_PopstarMoon_Surface5;
    background_htiled[3] = true;
    background_hspeed[3] = -.5;
    background_y[3] = 394;
    background_xscale[3] = 2;
    background_yscale[3] = 2;
    background_index[4] = bg_PopstarMoon_Surface4;
    background_htiled[4] = true;
    background_hspeed[4] = -.725;
    background_y[4] = 410;
    background_xscale[4] = 2;
    background_yscale[4] = 2;
    background_index[5] = bg_PopstarMoon_Surface3;
    background_htiled[5] = true;
    background_hspeed[5] = -1;
    background_y[5] = 426;
    background_xscale[5] = 2;
    background_yscale[5] = 2;
    background_index[6] = bg_PopstarMoon_Surface2;
    background_htiled[6] = true;
    background_hspeed[6] = -1.25;
    background_y[6] = 440;
    background_xscale[6] = 2;
    background_yscale[6] = 2;
    background_index[7] = bg_PopstarMoon_Surface1;
    background_htiled[7] = true;
    background_hspeed[7] = -1.55;
    background_y[7] = 456;
    background_xscale[7] = 2;
    background_yscale[7] = 2;
    alphaValue = .005;
    if (!audio_is_playing(mus_TitleAlt)) audio_play_sound(mus_TitleAlt,0,true);
    
    //Float Variables
    
    anchorY = y;
    frequency = 0.02;
    amplitude = 6;
    timer = 0;
}

//Other Variables

image_xscale = scale;
image_yscale = scale;
image_alpha = 0;
state = 0;
direction = 90;
friction = .2;

//Global Variables

global.ability = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if state == 0
{
    if global.Title == 1
    {
        y = anchorY + sin(timer*frequency)*amplitude;
        timer++;
    }
    
    if (keyboard_check(global.key_start) or gamepad_button_check_pressed(0, gp_start))
    {
        state = 1;
        speed = 8;
        //instance_create(-120,y+40,obj_Button_NewGame);
        //if (global.shaders = true) instance_create(room_width+60,room_height-100,obj_Button_SprayPaint);
        //instance_create(-120,y+140,obj_Button_Credits);
        //instance_create(-120,y+240,obj_Button_Options);
        instance_create(-120,150,obj_Button_NewGame);
        instance_create(room_width+20,room_height-100,obj_Button_Trash);
        instance_create(room_width+20,room_height-400,obj_Button_Gamejolt);
        instance_create(-120,225,obj_Button_Credits);
        instance_create(-120,300,obj_Button_Options);
        var exitButton = instance_create(-120,375,obj_Button_Exit);
        exitButton.close = true;
        if (global.shaders = true)
        {
            instance_create(room_width+20,room_height-200,obj_Button_SprayPaint);
            butCon = instance_create(x,y,obj_Button_Control);
            butCon.length = 7;
            butCon.but0 = obj_Button_NewGame;
            butCon.but1 = obj_Button_Credits;
            butCon.but2 = obj_Button_Options;
            butCon.but3 = obj_Button_Exit;
            butCon.but4 = obj_Button_Gamejolt;
            butCon.but5 = obj_Button_SprayPaint;
            butCon.but6 = obj_Button_Trash;
        }
        else
        {
            butCon = instance_create(x,y,obj_Button_Control);
            butCon.length = 6;
            butCon.but0 = obj_Button_NewGame;
            butCon.but1 = obj_Button_Credits;
            butCon.but2 = obj_Button_Options;
            butCon.but3 = obj_Button_Exit;
            butCon.but4 = obj_Button_Gamejolt;
            butCon.but5 = obj_Button_Trash;
        }
    }
}

if (image_alpha &lt; 1) image_alpha += (alphaValue * (1+state));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_alpha = 1 and state == 0
{
    draw_sprite_ext(spr_Demo,1,room_width/2,400,1,1,image_angle,image_blend,1);
    draw_set_font(fnt_AlienLarge);
    draw_set_color(c_white);
    draw_text(200,300,"Press START");
    draw_set_font(fnt_Credits);
    draw_text(24,24,"Version 1.1.3");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_Test);
audio_stop_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
