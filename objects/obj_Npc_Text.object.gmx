<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Other Variables

text = "";
text_speed = room_speed / 10;
textSpeed = 10;
text_displayed = "";
text_length = -1;
text_halign = fa_center;
index = 0;
cooldown = text_speed;
owner = id;
dir = 1;
spd = .25;
alphaSpd = .05;
cursorIndex = 1;
cursorLimit = 2;
cursorSpd = .05;
state = 0;
typewriter = false;
textbox = false;
textboxPortrait = spr_Portrait_Fredbear;
sound = snd_Freddy_Gameplay1;
soundPlayed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main

text_speed = room_speed / textSpeed;
if (text_length &lt;= 0)
{
   text_length = string_length(text);
}

if (index &gt;= text_length)
{
    if (state == 0) image_alpha -= alphaSpd;
    if (state == 1)
    {
        if (keyboard_check_pressed(ord("E"))) instance_destroy();
    }
}

if (image_alpha &lt;= 0) instance_destroy();

if (index &lt; text_length)
{
   cooldown--;
   if (cooldown &lt;= 0)
   {
       index++;
       text_displayed = string_copy(text, 1, index);
       cooldown = text_speed;
       if (typewriter) audio_play_sound(snd_Typewriter,0,false);
   }
}

if (state == 0) x += (spd * dir);

//Play Sound

if (!soundPlayed)
{
    soundPlayed = true;
    audio_play_sound(sound,0,false);
}

/*if (state == 1)
{
    if (keyboard_check_pressed(vk_anykey)) index += text_length - index;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

//Draw Textbox

if (textbox)
{
    draw_sprite(spr_Textbox_Bg,0,view_xview,view_yview);
    
    //Draw Portrait
    
    draw_sprite(textboxPortrait,0,view_xview + 45,view_yview + 45);
    
    //Draw Cursor
    
    if (index &gt;= text_length) draw_sprite(spr_Textbox_Cursor,cursorIndex,view_xview + 978,view_yview + 194);
}
else
{
    if (index &gt;= text_length) draw_sprite(spr_Textbox_Cursor,cursorIndex,view_xview + view_wview - sprite_get_width(spr_Textbox_Cursor) - 10,view_yview + view_hview - sprite_get_height(spr_Textbox_Cursor) - 10);
}

//Cursor Speed

cursorIndex += cursorSpd;
if (cursorIndex &gt;= cursorLimit) cursorIndex -= cursorLimit;
if (index &lt; text_length) cursorIndex = 1;

//Draw Text

draw_set_color(c_white);
draw_set_font(fnt_Chat);
draw_set_alpha(image_alpha);
draw_set_halign(text_halign);
draw_text(x,y,text_displayed);
draw_set_halign(fa_left);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
