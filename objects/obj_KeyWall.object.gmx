<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_TempWall</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Other Variables

image_speed = 0;
sprite_index = spr_Wall;
requiredKey = "Blue Keycard";
keyIndex = id;
keySprite = spr_KeycardDarkB;
pointIndex = 0;
pointSpd = .05;

//Alarms

alarm_Decrease = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main

if (instance_exists(obj_LevelControl))
{
    //Key Index
    
    if (requiredKey == "Blue Keycard")
    {
        keyIndex = obj_LevelControl.keycardBCollected;
        keySprite = spr_KeycardDarkB;
    }
    if (requiredKey == "Yellow Keycard")
    {
        keyIndex = obj_LevelControl.keycardYCollected;
        keySprite = spr_KeycardDarkY;
    }
    if (requiredKey == "Red Keycard")
    {
        keyIndex = obj_LevelControl.keycardRCollected;
        keySprite = spr_KeycardDarkR;
    }
    if (requiredKey == "Blue Skull")
    {
        keyIndex = obj_LevelControl.skullBCollected;
        keySprite = spr_SkullDarkB;
    }
    if (requiredKey == "Yellow Skull")
    {
        keyIndex = obj_LevelControl.skullYCollected;
        keySprite = spr_SkullDarkY;
    }
    if (requiredKey == "Red Skull")
    {
        keyIndex = obj_LevelControl.skullRCollected;
        keySprite = spr_SkullDarkR;
    }
    
    //Destroy
    
    if (keyIndex == true)
    {
        if (!audio_is_playing(snd_WallHit)) audio_play_sound(snd_WallHit,0,false);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

//Draw Self

draw_self();

//Animation

pointIndex += pointSpd;
if (pointIndex &gt;= 2) pointIndex -= 2;

//Draw Required Key

draw_sprite_ext(keySprite,pointIndex,x + sprite_width/2,y + sprite_height/2,4,4,image_angle,image_blend,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
