<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Null</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Weapon Variables

weaponIndex = global.weapon;
weaponType = 0;

/*
0 - Normal
1 - Car
2 - Melee
3 - Shotgun
*/

bulletObj = obj_Bullet;
bulletSpr = spr_Null;
attackSpeed = 0;
maxShoots = 1;
knockback = 0;
invisFrames = 30;
bulletX = 0;
bulletY = 0;
bulletSpeed = 0;
randomSpd = 0;
screenShake = 0;
damage = 0;
randomDmg = 0;
spread = 0;
rotateSpd = 0;
dashSpd = 0;
destroyable = false;
pierceCount = 0;
carIndex = spr_Null;
carImageSpeed = 0;
shootSound = snd_Guns_Pistol;
reloadSound = snd_Guns_Reload_Normal;

//Other Variables

attackable = true;
image_speed = 0;

//Alarms

alarm_Reload = -1;
alarm_Fire = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapons

switch (weaponIndex)
{
    //Pistol
    
    case(0):
    weaponType = 0;
    
    gunSpr = spr_Pistol;
    bulletObj = obj_Bullet;
    bulletSpr = spr_Bullet;
    carIndex = 0;
    
    attackSpeed = 20;
    maxShoots = 1;
    knockback = 5;
    invisFrames = 30;
    bulletSpeed = 16;
    randomSpd = 1;
    damage = 2;
    randomDmg = 0;
    spread = 4;
    rotateSpd = 0;
    dashSpd = 0;
    destroyable = true;
    pierceCount = 0;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 4;
    
    shootSound = snd_Guns_Pistol;
    reloadSound = snd_Guns_Reload_Normal;
    break;
    
    //Machine Gun
    
    case(1):
    weaponType = 0;
    
    gunSpr = spr_MachineGun;
    bulletObj = obj_Bullet;
    bulletSpr = spr_Bullet;
    carIndex = 0;
    
    attackSpeed = 8;
    maxShoots = 1;
    knockback = 3;
    invisFrames = 10;
    bulletSpeed = 16;
    randomSpd = 1;
    damage = 1;
    randomDmg = 0;
    spread = 4;
    rotateSpd = 0;
    dashSpd = 0;
    destroyable = true;
    pierceCount = 0;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 2;
    
    shootSound = snd_Guns_Pistol;
    reloadSound = snd_Guns_Reload_Normal;
    break;
    
    //Shotgun
    
    case(2):
    weaponType = 0;
    
    gunSpr = spr_Shotgun;
    bulletObj = obj_Bullet;
    bulletSpr = spr_Bullet;
    carIndex = 0;
    
    attackSpeed = 60;
    maxShoots = 6;
    knockback = 8;
    invisFrames = 30;
    bulletSpeed = 16;
    randomSpd = 3;
    damage = 4;
    randomDmg = 1;
    spread = 12;
    rotateSpd = 0;
    dashSpd = 0;
    destroyable = true;
    pierceCount = 0;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 2;
    
    shootSound = snd_Guns_Pistol;
    reloadSound = snd_Guns_Reload_Normal;
    break;
    
    //Throwing Knife
    
    case(3):
    weaponType = 0;
    
    gunSpr = spr_Null;
    bulletObj = obj_Bullet;
    bulletSpr = spr_ThrowingKnife;
    carIndex = 0;
    
    attackSpeed = 14;
    maxShoots = 1;
    knockback = 1;
    invisFrames = 30;
    bulletSpeed = 14;
    randomSpd = 2;
    damage = 2;
    randomDmg = 0;
    spread = 0;
    rotateSpd = 20;
    dashSpd = 0;
    destroyable = true;
    pierceCount = 0;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 4;
    
    shootSound = snd_Guns_Knife;
    reloadSound = snd_Guns_Reload_Sword;
    break;
    
    //Shuriken
    
    case(4):
    weaponType = 0;
    
    gunSpr = spr_Null;
    bulletObj = obj_Bullet;
    bulletSpr = spr_Shuriken;
    carIndex = 0;
    
    attackSpeed = 18;
    maxShoots = 1;
    knockback = 1;
    invisFrames = 30;
    bulletSpeed = 10;
    randomSpd = 1;
    damage = 3;
    randomDmg = 0;
    spread = 0;
    rotateSpd = 10;
    dashSpd = 0;
    destroyable = true;
    pierceCount = 2;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 4;
    
    shootSound = snd_Guns_Knife;
    reloadSound = snd_Guns_Reload_Sword;
    break;
    
    //Golden Pistol
    
    case(5):
    weaponType = 0;
    
    gunSpr = spr_GoldenPistol;
    bulletObj = obj_Bullet;
    bulletSpr = spr_Bullet;
    carIndex = 0;
    
    attackSpeed = 20 - 7;
    maxShoots = 1;
    knockback = 5;
    invisFrames = 30;
    bulletSpeed = 16;
    randomSpd = 1;
    damage = 2;
    randomDmg = 0;
    spread = 4;
    rotateSpd = 0;
    dashSpd = 0;
    destroyable = true;
    pierceCount = 0;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 4;
    
    shootSound = snd_Guns_Pistol;
    reloadSound = snd_Guns_Reload_Normal;
    break;
    
    //Golden Machine Gun
    
    case(6):
    weaponType = 0;
    
    gunSpr = spr_GoldenMachineGun;
    bulletObj = obj_Bullet;
    bulletSpr = spr_Bullet;
    carIndex = 0;
    
    attackSpeed = 8 - (7 - 4);
    maxShoots = 1;
    knockback = 3;
    invisFrames = 10;
    bulletSpeed = 16;
    randomSpd = 1;
    damage = 1;
    randomDmg = 0;
    spread = 4;
    rotateSpd = 0;
    dashSpd = 0;
    destroyable = true;
    pierceCount = 0;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 2;
    
    shootSound = snd_Guns_Pistol;
    reloadSound = snd_Guns_Reload_Normal;
    break;
    
    //Golden Shotgun
    
    case(7):
    weaponType = 0;
    
    gunSpr = spr_GoldenShotgun;
    bulletObj = obj_Bullet;
    bulletSpr = spr_Bullet;
    carIndex = 0;
    
    attackSpeed = 60 - (7 * 2);
    maxShoots = 6 + 1;
    knockback = 8;
    invisFrames = 30;
    bulletSpeed = 16;
    randomSpd = 3;
    damage = 4;
    randomDmg = 1;
    spread = 12;
    rotateSpd = 0;
    dashSpd = 0;
    destroyable = true;
    pierceCount = 0;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 2;
    
    shootSound = snd_Guns_Pistol;
    reloadSound = snd_Guns_Reload_Normal;
    break;
    
    //Golden Throwing Knife
    
    case(8):
    weaponType = 0;
    
    gunSpr = spr_Null;
    bulletObj = obj_Bullet;
    bulletSpr = spr_GoldenThrowingKnife;
    carIndex = 0;
    
    attackSpeed = 14 - (7 - 4);
    maxShoots = 1;
    knockback = 1;
    invisFrames = 30;
    bulletSpeed = 14;
    randomSpd = 2;
    damage = 2;
    randomDmg = 0;
    spread = 0;
    rotateSpd = 20;
    dashSpd = 0;
    destroyable = true;
    pierceCount = 0;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 4;
    
    shootSound = snd_Guns_Knife;
    reloadSound = snd_Guns_Reload_Sword;
    break;
    
    //Golden Shuriken
    
    case(9):
    weaponType = 0;
    
    gunSpr = spr_Null;
    bulletObj = obj_Bullet;
    bulletSpr = spr_GoldenShuriken;
    carIndex = 0;
    
    attackSpeed = 18 - (7 - 3);
    maxShoots = 1;
    knockback = 1;
    invisFrames = 30;
    bulletSpeed = 10;
    randomSpd = 1;
    damage = 3;
    randomDmg = 0;
    spread = 0;
    rotateSpd = 10;
    dashSpd = 0;
    destroyable = true;
    pierceCount = 2;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 4;
    
    shootSound = snd_Guns_Knife;
    reloadSound = snd_Guns_Reload_Sword;
    break;
    
    //Road Roller
    
    case(10):
    weaponType = 1;
    
    gunSpr = spr_RoadRoller;
    bulletObj = obj_Car;
    bulletSpr = spr_Null;
    carIndex = 0;
    
    attackSpeed = 180;
    maxShoots = 1;
    knockback = 12;
    invisFrames = 60;
    bulletSpeed = 16;
    damage = 20;
    randomDmg = 0;
    spread = 0;
    rotateSpd = 0;
    dashSpd = 40;
    destroyable = false;
    pierceCount = 0;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 0;
    
    shootSound = snd_Guns_RoadRoller;
    reloadSound = snd_Guns_Reload_Normal;
    break;
    
    //Annoying Bark
    
    case(11):
    weaponType = 0;
    
    gunSpr = spr_Null;
    bulletObj = obj_Bullet;
    bulletSpr = spr_Bark;
    carIndex = 0;
    
    attackSpeed = 30;
    maxShoots = 1;
    knockback = 0;
    invisFrames = 30;
    bulletSpeed = 12;
    randomSpd = 1;
    damage = 6;
    randomDmg = 0;
    spread = 0;
    rotateSpd = 0;
    dashSpd = 0;
    destroyable = false;
    pierceCount = 0;
    
    bulletX = 0;
    bulletY = 0;
    screenShake = 4;
    
    shootSound = snd_Guns_Bark;
    reloadSound = snd_Guns_Reload_Bark;
    break;
}

image_index = weaponIndex;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main

//Follow Player

if (instance_exists(obj_Player))
{
    x = obj_Player.x;
    y = obj_Player.y;
    obj_Player.direction = image_angle;
    
    //Fire Weapon
    
    if (mouse_check_button(mb_left))
    {
        if (attackable and (!obj_Player.enterPortal)) alarm_Fire = 0;
    }
}
else
{
    instance_destroy();
}

//Animation

sprite_index = gunSpr;

carImageSpeed += .02;
if (carImageSpeed == 2) carImageSpeed = 0;

//Cursor

if (instance_exists(obj_Cursor)) image_angle = point_direction(x,y,obj_Cursor.x,obj_Cursor.y);
direction = image_angle;

//Switch Weapon

/*if (global.debug)
{
    if (keyboard_check_pressed(ord("Q")))
    {
        alarm_Reload = 0;
        weaponIndex -= 1;
    }
    if (keyboard_check_pressed(ord("E")))
    {
        alarm_Reload = 0;
        weaponIndex += 1;
    }
    
    if (weaponIndex == -1) weaponIndex = 11;
    if (weaponIndex == 12) weaponIndex = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarms

//Fire Weapon

if(alarm_Fire != -1)
{
    alarm_Fire = max(0,alarm_Fire-1);
    if(alarm_Fire == 0)
    {
        var i;
        for (i = 0; i &lt; maxShoots; i += 1)
        {
            var bullet = instance_create(x,y,bulletObj);
            bullet.speed = bulletSpeed + irandom_range(-randomSpd,randomSpd);
            bullet.angleStart = image_angle + irandom_range(-spread,spread);
            bullet.image_angle = bullet.angleStart;
            bullet.sprite_index = bulletSpr;
            bullet.rotateSpd = rotateSpd;
            bullet.damage = damage + irandom_range(-randomDmg,randomDmg);
            bullet.knockback = knockback;
            bullet.invisFrames = invisFrames;
            bullet.destroyable = destroyable;
            bullet.pierceCount = pierceCount;
            if (weaponType == 1) bullet.carIndex = carIndex;
            if ((instance_exists(obj_Camera)) and (instance_exists(obj_LevelControl))) obj_Camera.shake += screenShake + round(obj_LevelControl.combo * .5);
            if (instance_exists(obj_Player))
            {
                obj_Player.speed = dashSpd;
            }
            audio_play_sound(shootSound,0,false);
        }
        if (i == maxShoots)
        {
            attackable = false;
            alarm_Reload = attackSpeed;
            alarm_Fire = -1;
        }
    }
}

//Reload Weapon

if(alarm_Reload != -1)
{
    alarm_Reload = max(0,alarm_Reload-1);
    if(alarm_Reload == 0)
    {
        attackable = true;
        if (!mouse_check_button(mb_left)) audio_play_sound(reloadSound,0,false);
        alarm_Reload = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

//Draw Self

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
