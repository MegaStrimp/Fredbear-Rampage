<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Keycards

keycardBExists = false;
keycardYExists = false;
keycardRExists = false;
skullBExists = false;
skullYExists = false;
skullRExists = false;

keycardBCollected = false;
keycardYCollected = false;
keycardRCollected = false;
skullBCollected = false;
skullYCollected = false;
skullRCollected = false;

keycardBSprite = spr_KeycardDarkB;
keycardYSprite = spr_KeycardDarkY;
keycardRSprite = spr_KeycardDarkR;
skullBSprite = spr_SkullDarkB;
skullYSprite = spr_SkullDarkY;
skullRSprite = spr_SkullDarkR;

//Other Variables

combo = 0;
enemyWall = 0;
alpha = 0;
decreaseTimer = 0;
pointIndex = 0;
pointSpd = .05;

//Alarms

alarm_Setup = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main

//Decrease Combo

if (combo &gt; 0)
{
    decreaseTimer += 1;
    if (decreaseTimer &gt;= 100)
    {
        decreaseTimer -= 100;
        combo = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarms

//Setup

if(alarm_Setup != -1)
{
    alarm_Setup = max(0,alarm_Setup-1);
    if(alarm_Setup == 0)
    {
        if (instance_exists(obj_KeycardB)) keycardBExists = true;
        alarm_Setup = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

//Animation

pointIndex += pointSpd;
if (pointIndex &gt;= 2) pointIndex -= 2;

//Draw Keycards

if (keycardBExists) draw_sprite_ext(keycardBSprite,pointIndex,(view_xview + (50 * 1)),(view_yview + view_hview - 50),2,2,image_angle,image_blend,1);
if (keycardYExists) draw_sprite_ext(keycardYSprite,pointIndex,(view_xview + (50 * 2)),(view_yview + view_hview - 50),2,2,image_angle,image_blend,1);
if (keycardRExists) draw_sprite_ext(keycardRSprite,pointIndex,(view_xview + (50 * 3)),(view_yview + view_hview - 50),2,2,image_angle,image_blend,1);
if (skullBExists) draw_sprite_ext(skullBSprite,pointIndex,(view_xview + (50 * 4)),(view_yview + view_hview - 50),2,2,image_angle,image_blend,1);
if (skullYExists) draw_sprite_ext(skullYSprite,pointIndex,(view_xview + (50 * 5)),(view_yview + view_hview - 50),2,2,image_angle,image_blend,1);
if (skullRExists) draw_sprite_ext(skullRSprite,pointIndex,(view_xview + (50 * 6)),(view_yview + view_hview - 50),2,2,image_angle,image_blend,1);

//Draw Fazcoin

draw_sprite(spr_Fazcoin,pointIndex,view_xview + 50,(view_yview + view_hview - 400));

draw_set_color(c_white);
draw_set_font(fnt_Chat);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text(view_xview + 50 + 25 + (sprite_get_width(spr_Fazcoin)),(view_yview + view_hview - 400)," X " + string(global.fazcoins));
draw_set_halign(fa_left);
draw_set_valign(fa_top);

//Red Filter Alpha

alpha = lerp(alpha,combo * .01, .05);

//Draw Red Filter

draw_sprite_ext(spr_RedFilter,0,(view_xview + view_wview * 0.5),(view_yview + view_hview * 0.5),2,2,image_angle,image_blend,alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
