<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Other Variables

state = 0;
text = "";
portrait = spr_Portrait_Fredbear;
textSpeedFredbear = 30;
textSpeedBB = 20;
textSpeed = textSpeedFredbear;

//Alarms

alarm_SwitchText = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main

//Switch Text

if ((alarm_SwitchText == -1) and (!instance_exists(obj_Npc_Text)) and (state &lt; 28))
{
    alarm_SwitchText = 45;
    if ((state == 0) or (state == 3) or (state == 4) or (state == 24)) alarm_SwitchText = 60;
    if ((state == 15) or (state == 16) or (state == 17) or (state == 18)) alarm_SwitchText = 60;
    if (state == 19) alarm_SwitchText = 90;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarms

//Switch Text

if(alarm_SwitchText != -1)
{
    alarm_SwitchText = max(0,alarm_SwitchText-1);
    if(alarm_SwitchText == 0)
    {
        switch (state)
        {
            case 0:
            text = "Good old Fredbear...";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 1:
            text = "Even after he came back from##the dead,";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 2:
            text = "He is still desperately trying to##ruin our peace...";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 3:
            text = "Shut up.";
            portrait = spr_Portrait_Fredbear;
            sound = snd_Fredbear_Cutscene22;
            textSpeed = textSpeedFredbear;
            break;
            case 4:
            text = "I thought you all got burnt.";
            portrait = spr_Portrait_Fredbear;
            sound = snd_Fredbear_Cutscene23;
            textSpeed = textSpeedFredbear;
            break;
            case 5:
            text = "Can't you see the burn marks##on me?";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 6:
            text = "Our savior gave us a new life...";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 7:
            text = "What do you mean?";
            portrait = spr_Portrait_Fredbear;
            sound = snd_Fredbear_Cutscene24;
            textSpeed = textSpeedFredbear;
            break;
            case 8:
            text = "When we got burnt, Phantom##Puppet revived us.";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 9:
            text = "Just so we protect our##legacy.";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 10:
            text = "The legacy that you betrayed##back in the Family Diner.";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 11:
            text = "I will kill you.";
            portrait = spr_Portrait_Fredbear;
            sound = snd_Fredbear_Cutscene25;
            textSpeed = textSpeedFredbear;
            break;
            case 12:
            text = "Your family and friends.";
            portrait = spr_Portrait_Fredbear;
            sound = snd_Fredbear_Cutscene26;
            textSpeed = textSpeedFredbear;
            break;
            case 13:
            text = "Wait...";
            portrait = spr_Portrait_Fredbear;
            sound = snd_Fredbear_Cutscene27;
            textSpeed = textSpeedFredbear;
            break;
            case 14:
            text = "Tell me what happened##to Spring Bonnie!";
            portrait = spr_Portrait_Fredbear;
            sound = snd_Fredbear_Cutscene28;
            textSpeed = textSpeedFredbear;
            break;
            case 19:
            text = "What the heck?";
            portrait = spr_Portrait_Fredbear;
            sound = snd_Fredbear_Cutscene29;
            textSpeed = textSpeedFredbear;
            break;
            case 20:
            text = "Heheheh...";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 21:
            text = "You think I'd just allow you##to approach me like that?";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 22:
            text = "This is my stand##" + chr(34) + "Burning Memory" + chr(34) + ".";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 23:
            text = "It has a secret that will##surely kill you.";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
            case 24:
            text = "Hey baby,";
            portrait = spr_Portrait_Fredbear;
            sound = snd_Fredbear_Cutscene30;
            textSpeed = textSpeedFredbear;
            break;
            case 25:
            text = "It's easy to be cocky##when your up there!";
            portrait = spr_Portrait_Fredbear;
            sound = snd_Fredbear_Cutscene31;
            textSpeed = textSpeedFredbear;
            break;
            case 26:
            text = "Here we go!";
            portrait = spr_Portrait_PhantomBB;
            sound = snd_BalloonBoy_Gameplay1;
            textSpeed = textSpeedBB;
            break;
        }
        if ((state &lt; 27) and (state != 15) and (state != 16) and (state != 17) and (state != 18))
        {
            objText = instance_create(view_xview + 90 + sprite_get_width(spr_Portrait_Fredbear),view_yview + 45,obj_Npc_Text);
            objText.text = text;
            objText.state = 1;
            objText.textSpeed = textSpeed;
            objText.text_halign = fa_left;
            objText.textbox = true;
            objText.textboxPortrait = portrait;
            objText.sound = sound;
        }
        if (state == 15)
        {
            if (instance_exists(obj_Cutscene2_Player)) obj_Cutscene2_Player.vsp = -(obj_Cutscene2_Player.spd/2);
        }
        if ((state == 16) or (state == 17) or (state == 18))
        {
            if (instance_exists(obj_Cutscene2_Player))
            {
                obj_Cutscene2_Player.x = obj_Cutscene2_Player.xstart;
                obj_Cutscene2_Player.y = obj_Cutscene2_Player.ystart;
                if (state == 18) obj_Cutscene2_Player.vsp = 0;
            }
            audio_play_sound(snd_BurningMemoryShort,0,false);
            audio_play_sound(snd_BalloonBoy_Gameplay1,0,false);
            shockwave_create(x, y, -97, 0, 28, 512, 15, 18, 20, true, c_white, false);
            var standText = instance_create(x,y,obj_StandText);
            standText.text = "BURNING MEMORY";
            standText.spd = .01;
        }
        if (state == 23)
        {
            audio_play_sound(mus_CaptureTheTarget,0,true);
        }
        if (state == 27)
        {
            fade = instance_create(x,y,obj_Fade);
            fade.nextRoom = rm_Boss_PhantomBB;
            fade.b = 0.01;
        }
        state += 1;
        alarm_SwitchText = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
